plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'

	id 'com.google.cloud.tools.jib' version '3.3.1'

	id 'java'
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-text:1.9'
	implementation 'commons-codec:commons-codec:1.14'
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'com.google.guava:guava:31.0.1-jre'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.0.5'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

ext.getGitShortHash = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

jib {
	from {
		image = 'eclipse-temurin:17.0.5_8-jdk-centos7'
	}
	to {
		image = "registry.cn-beijing.aliyuncs.com/sketcherly/${rootProject.name}:${getGitShortHash()}"
		auth {
			username = 'developer@1795522291337151'
			password = 'IOT4wlhCJpLyBRTS'
		}
	}
	container {
	}
}